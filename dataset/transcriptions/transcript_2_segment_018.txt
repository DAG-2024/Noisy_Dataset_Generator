Similarly, I can't take Anna to some power. I can't multiply by itself, things like that. But the kinds of things that I am allowed to doon a sequence of characters is different than the kindsof things I'm allowed to do on a number. So the things I can do with a sequence of charactersis I can say, well, what's the characterat the first position? What's the middle character? how long is the sequence of characters? How many characters do I have? And so now you can see that the type of the objectis actually really important. Python uses it to know the kinds of operationsyou're allowed to do with it. And so there's actually scalar objects,and these are Python's primitives, numbers, and truth values. And there are non-scalar objects. We're not talking about these yet. We'll talk about these in a few lectures,but these have some sort of structure. So for example, a list of numbers has a structure because there's a number at the beginning of the list. There's a number at the end of the list, things like that. But a number itself doesn't have a structure. It's just the number. So what are the types of the scalar objects? What are the types of the primitives in Python? Integers. So number 5, 0, negative 100, a million. Float is another type.